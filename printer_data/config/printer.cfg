[include mainsail.cfg]
[include macros.cfg]
[include KAMP_Settings.cfg]
[include timelapse.cfg]

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10    ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10    ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5     ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1     ; the value to retract while PAUSE
variable_cancel_retract   : 5     ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 80    ; retract speed in mm/s
variable_unretract        : 1     ; the value to unretract while RESUME
variable_speed_unretract  : 80    ; unretract speed in mm/s
variable_speed_hop        : 15    ; z move speed in mm/s
variable_speed_move       : 100   ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 10    ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 340   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True  ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[mcu]
serial: /dev/serial/by-id/usb-Klipper_sam4e8e_00313353513151373138303135303039-if00

[mcu OrangePi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: OrangePi:None
spi_bus: spidev1.0
rate: 3200
spi_speed: 488000

[resonance_tester]
accel_chip: adxl345
probe_points: 100, 100, 20  # an example

[virtual_sdcard]
path: /home/sz/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[temperature_sensor Duet3D]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor OrangePi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100 

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 25
max_z_accel: 100

[firmware_retraction]
retract_length: 3.6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 80
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 80
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[stepper_x]
#Drive 0
step_pin: PD7
dir_pin: PD12
enable_pin: !PC6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC14
position_endstop: 0
position_max: 370
homing_speed: 150
second_homing_speed: 10

[tmc2660 stepper_x]
cs_pin: PD14
spi_bus: usart1
run_current: 0.70
sense_resistor: 0.051

[stepper_y]
#Drive 1
step_pin: PD6
dir_pin: PD11
enable_pin: !PC6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA2
position_endstop: 0
position_max: 345
homing_speed: 150
second_homing_speed: 10

[tmc2660 stepper_y]
cs_pin: PC9
spi_bus: usart1
run_current: 0.70
sense_resistor: 0.051

[stepper_z]
step_pin: PD4
dir_pin: PD13
enable_pin: !PC6
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PD10  # E0 endstop
#endstop_pin: PC16  # E1 endstop
position_max: 390
position_min: -10 # enable to use BLTouch
homing_speed: 8
second_homing_speed: 3

[stepper_z1]
step_pin: PD8
dir_pin: PD9
enable_pin: !PC6
microsteps: 16
rotation_distance: 8
#endstop_pin: PD10  # E0 endstop
#endstop_pin: PC16  # E1 endstop
#position_max: 350
#position_min: -10 # enable to use BLTouch

[tmc2660 stepper_z]
cs_pin: PC10
spi_bus: usart1
run_current: 0.90
sense_resistor: 0.051

[tmc2660 stepper_z1]
cs_pin: PC25
spi_bus: usart1
run_current: 0.90
sense_resistor: 0.051

[extruder]
step_pin: PD5
dir_pin: !PA1
enable_pin: !PC6
microsteps: 16
rotation_distance: 7.89
nozzle_diameter: 0.600
filament_diameter: 1.750
max_extrude_only_distance: 400
heater_pin: !PA20
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC15
control: pid
pid_Kp=35.570 
pid_Ki=2.401 
pid_Kd=124.451
min_temp: 0
max_temp: 290
pressure_advance = 0.29
max_extrude_cross_section: 5

[tmc2660 extruder]
cs_pin: PC17
spi_bus: usart1
run_current: 0.85
sense_resistor: 0.051

[heater_bed]
heater_pin: !PA19
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC13
control = pid
pid_kp = 61.987
pid_ki = 2.322
pid_kd = 413.762
min_temp: 0
max_temp: 130

[fan]
pin: PC23  # FAN0

[heater_fan Heat_Break]
pin: PC26  # FAN1
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

[fan_generic Board_Fan]
pin: PA0  # FAN2

[bltouch]
speed: 5
control_pin: PC3
sensor_pin: ^PC1
x_offset: 30.75
y_offset: 8.5
z_offset: 2.313
probe_with_touch_mode: True
stow_on_each_sample: True

[safe_z_home]
home_xy_position: 164.25 , 186.5 # Change coordinates to the center of your print bed
speed: 150
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[z_tilt]
z_positions: -40 , 200 
  460 , 200
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points: 0 , 200
  360 , 200
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 200
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 6
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.015
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[bed_mesh]
speed: 150
horizontal_move_z: 8
mesh_min: 34.5, 10
mesh_max: 370, 344
probe_count: 4
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1
fade_end: 10
fade_target: 0

[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.075882, -0.155882, -0.165882
#*# 	  0.021618, 0.019118, -0.055882
#*# 	  0.074118, 0.139118, 0.084118
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 76.93
#*# max_x = 140.66
#*# min_y = 159.78
#*# max_y = 222.18
